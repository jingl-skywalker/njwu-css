/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.YJWTeacher;

import businesslogicservice.courseblservice.CourseBLService;
import businesslogicservice.courseblservice.CourseOperationFactory;
import enumeration.ResultMessage;
import java.awt.FileDialog;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vo.coursevo.CourseVO;
import vo.uservo.UserInfoVO;

/**
 *
 * @author 天
 */
public class AddCoursePanel extends javax.swing.JPanel {
UserInfoVO userInfo;
String ip;
int port;
CourseBLService courseBL;
ArrayList<CourseVO> vos=new ArrayList<CourseVO>();
CourseOperationFactory factory = new CourseOperationFactory();
DefaultListModel listModel = new DefaultListModel();
JFrame frame;
    /**
     * Creates new form AddCoursePanel
     */
    public AddCoursePanel(UserInfoVO v,String ip,int port,JFrame frame) {
         this.userInfo = v;
        this.ip = ip;
        this.port = port;
        this.frame = frame;
        initComponents();
        
        courseBL = factory.createCourseBL();
        String[] s=courseBL.getAllTerms();
        for(String str:s){
            listModel.addElement(str);
        }
        termList.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        termList = new javax.swing.JList();
        addTermButton = new javax.swing.JButton();
        courseButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        courseTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        fileTextField = new javax.swing.JTextField();
        openButton = new javax.swing.JButton();
        commitButton = new javax.swing.JButton();

        termList.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        termList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                termListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(termList);

        addTermButton.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        addTermButton.setText("添加新学期");
        addTermButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTermButtonActionPerformed(evt);
            }
        });

        courseButton.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        courseButton.setText("将课程导入到新学期");
        courseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseButtonActionPerformed(evt);
            }
        });

        courseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(courseTable);

        jLabel1.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        jLabel1.setText("从文件中添加");

        fileTextField.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        fileTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileTextFieldActionPerformed(evt);
            }
        });

        openButton.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        openButton.setText("打开");
        openButton.setEnabled(false);
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        commitButton.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        commitButton.setText("提交");
        commitButton.setEnabled(false);
        commitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(courseButton)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(addTermButton)))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(fileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(openButton)
                        .addGap(38, 38, 38)
                        .addComponent(commitButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(addTermButton)
                        .addGap(49, 49, 49)
                        .addComponent(courseButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(openButton)
                        .addComponent(commitButton)))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void termListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_termListValueChanged
        // TODO add your handling code here:
        String term=(String) termList.getSelectedValue();
        if(term ==null){
            return;
        }
        if(term.equals((String)listModel.lastElement())){
            openButton.setEnabled(true);
            commitButton.setEnabled(true);
        }
        else{
             openButton.setEnabled(false);
            commitButton.setEnabled(false);
        }
        courseBL = factory.createCourseBL(term);
       vos = courseBL.observeInsCreateCour(userInfo.getDepart());
       updateTable();
    }//GEN-LAST:event_termListValueChanged

    /**
     * 开设新课程
     * @param evt 
     */
    private void addTermButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTermButtonActionPerformed
        // TODO add your handling code here:
        String s = (String) listModel.lastElement();
        String[] ts = s.split("-");
        int year1 = Integer.parseInt(ts[0]);
        int month1 = Integer.parseInt(ts[1]);
        
        Calendar c = Calendar.getInstance();
        int year = c.get(Calendar.YEAR);
        int month = c.get(Calendar.MONTH);
        String newTerm;
        if(month<2){
            newTerm = (year-1)+"-"+2;
        }
        else if(month<8){
            newTerm = year+"-"+1;
        }
        else{
            newTerm = year+"-"+2;
        }
        if(newTerm.equals(s)){
            JOptionPane.showConfirmDialog(this, "时间未到", null, JOptionPane.OK_OPTION);
            return;
        }
        else{
            listModel.addElement(newTerm);
            courseBL.createTerm(newTerm);   //创建文件
            courseButton.setEnabled(true);
        }
    }//GEN-LAST:event_addTermButtonActionPerformed

    private void courseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseButtonActionPerformed
        // TODO add your handling code here:
         courseBL = factory.createCourseBL((String)listModel.lastElement());
        try {
            CourseVO v = courseBL.addCourses(vos);
            if(v==null){
                JOptionPane.showConfirmDialog(this, "添加成功", null, JOptionPane.OK_OPTION);
            }
            else{
                JOptionPane.showConfirmDialog(this, "添加失败，课程号："+v.getCourseID()+"已存在", null, JOptionPane.OK_OPTION);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(AddCoursePanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(this, "网络异常", null, JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_courseButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        // TODO add your handling code here:
        FileDialog fileDialog = new FileDialog(frame,"请选择文件：",FileDialog.LOAD);
        fileDialog.setVisible(true);
        String directory = fileDialog.getDirectory();
        String file  = fileDialog.getFile();
        fileTextField.setText(directory+"/"+file);
    }//GEN-LAST:event_openButtonActionPerformed

    private void fileTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileTextFieldActionPerformed
        // TODO add your handling code here:
        commitButtonActionPerformed(evt);
    }//GEN-LAST:event_fileTextFieldActionPerformed

    private void commitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitButtonActionPerformed
        // TODO add your handling code here:
         int i = JOptionPane.showConfirmDialog(this, "确定添加？", null, JOptionPane.OK_CANCEL_OPTION, WIDTH);
        if(i!=JOptionPane.OK_OPTION){
            return ;
        }
        courseBL = factory.createCourseBL((String)listModel.lastElement());
        try {
            CourseVO v = courseBL.addCourses(fileTextField.getText());
            if(v==null){
                JOptionPane.showConfirmDialog(this, "添加成功", null, JOptionPane.OK_OPTION);
            }
            else{
                JOptionPane.showConfirmDialog(this, "添加失败，课程号："+v.getCourseID()+"已存在", null, JOptionPane.OK_OPTION);
            }
        } catch (RemoteException ex) {
            Logger.getLogger(AddCoursePanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showConfirmDialog(this, "网络异常", null, JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_commitButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTermButton;
    private javax.swing.JButton commitButton;
    private javax.swing.JButton courseButton;
    private javax.swing.JTable courseTable;
    private javax.swing.JTextField fileTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton openButton;
    private javax.swing.JList termList;
    // End of variables declaration//GEN-END:variables
  private void updateTable(){
        String[][] content = new String[vos.size()][8];
        for (int i = 0; i < vos.size(); i++) {

            //初始化table
            content[i][0] = vos.get(i).getModule();
            content[i][1] = vos.get(i).getProperty();
            content[i][2] = vos.get(i).getType();
            content[i][3] = vos.get(i).getCourseID();
            content[i][4] = vos.get(i).getCourseName();
            content[i][5] = vos.get(i).getCredit();
            content[i][6] = vos.get(i).getHour();
            content[i][7] = vos.get(i).getPeriod();
        }
        String[] head = {"课程模块","课程性质","课程类别","课程号","课程名","学分","周学时","修读年级"};
        DefaultTableModel model = new DefaultTableModel(content, head) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        courseTable.setModel(model);

    }
  public void update(){
       String[][] content = new String[0][8];
        String[] head = {"课程模块","课程性质","课程类别","课程号","课程名","学分","周学时","修读年级"};
        DefaultTableModel model = new DefaultTableModel(content, head) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        courseTable.setModel(model);
        openButton.setEnabled(false);
        commitButton.setEnabled(false);
        fileTextField.setText("");
  }
}
