/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.JWTeacher;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import ui.Library.ComboBox;
import ui.Library.ImageIconFactory;
import ui.Library.LogoButton;
import ui.Library.TextArea;
import ui.Library.TextField;
import ui.Library.TextLabel;

/**
 *
 * @author zili Chen
 */
public class NewMFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewMFrame
     */
    public NewMFrame() {
        initComponents();
        /*GUI-frame背景*/
        image = new ImageIconFactory();
        backLabel = new JLabel(image.getBmodelbackIcon());
        backLabel.setBounds(0,0,543,272);
        getLayeredPane().add(backLabel,new Integer(Integer.MIN_VALUE));
        backPanel = (JPanel)getContentPane();
        backPanel.setOpaque(false);//设置透明
        /*GUI-组件*/
        ArrayList<String> up = new ArrayList<String>();
        String s = "0";
        for(int i=1;i<15;i++) {
            s = s+i;
            up.add(s);
            s = "0";
            if(i>8) 
                s = "";
        }
        ArrayList<String> down = new ArrayList<String>();
        s = "0";
        for(int i=1;i<15;i++) {
            s = s+i;
            down.add(s);
            s = "0";
            if(i>8) 
                s = "";
        }
        nameLabel = new TextLabel("模块名",10,10,50,30).getLabel();
        describeLabel = new TextLabel("模块描述",10,60,70,30).getLabel();
        upLabel = new TextLabel("学分上界",10,220,90,30).getLabel();
        downLabel = new TextLabel("学分下界",140,220,90,30).getLabel();
        nameTextField = new TextField(80,10,196,30).getTextField();
        describeTextArea = new TextArea(80,60,440,140).getTextArea();
        sureButton = new LogoButton(400,210).getLYesButton();
        sureButton.addMouseListener(new SureListener());
        cancelButton = new LogoButton(460,210).getLCancelButton();
        cancelButton.addMouseListener(new CancelListener());
        upComboBox = new ComboBox(up,70,220,50,30).getComboBox();
        downComboBox = new ComboBox(down,200,220,50,30).getComboBox();
        add(nameLabel);
        add(describeLabel);
        add(upLabel);
        add(downLabel);
        add(nameTextField);
        add(describeTextArea);
        add(sureButton);
        add(cancelButton);
        add(upComboBox);
        add(downComboBox);
    }
    
    /*事件-sure按钮*/
    class SureListener implements MouseListener {

        @Override
        public void mouseClicked(MouseEvent e) {
            dispose();
        }

        @Override
        public void mousePressed(MouseEvent e) {
            sureButton.setContentAreaFilled(true);
            sureButton.setOpaque(false);
            sureButton.setBackground(Color.black);
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            sureButton.setContentAreaFilled(false);
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }
        
    }
    
    /*事件-cancel按钮*/
    class CancelListener implements MouseListener {

        @Override
        public void mouseClicked(MouseEvent e) {
            dispose();
        }

        @Override
        public void mousePressed(MouseEvent e) {
            cancelButton.setContentAreaFilled(true);
            cancelButton.setOpaque(false);
            cancelButton.setBackground(Color.black);
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            cancelButton.setContentAreaFilled(false);
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 543, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewMFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    /*GUI-frame背景*/
    private ImageIconFactory image;
    private JLabel backLabel;//背景label
    private JPanel backPanel;//frame最上层面板
    /*GUI-组件*/
    private JLabel nameLabel;
    private JLabel describeLabel;
    private JLabel upLabel;
    private JLabel downLabel;
    private JTextField nameTextField;
    private JTextArea describeTextArea;
    private JComboBox upComboBox;
    private JComboBox downComboBox;
    private JButton sureButton;
    private JButton cancelButton;
    
}
